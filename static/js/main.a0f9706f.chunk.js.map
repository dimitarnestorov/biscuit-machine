{"version":3,"sources":["BiscuitMachine/MachineState.ts","BiscuitMachine/ConeyorBelt/ConveyorBelt.tsx","BiscuitMachine/MachineStore.ts","BiscuitMachine/Controls/Controls.tsx","BiscuitMachine/BiscuitMachine.tsx","reportWebVitals.ts","mobxConfiguration.ts","index.tsx","BiscuitMachine/config.module.scss"],"names":["MachineState","strokeDasharray","strokeDasharrayString","join","pathLength","ConveyorBelt","className","xmlns","xmlnsXlink","viewBox","fill","id","cx","cy","r","width","height","x","y","maskContentUnits","maskUnits","xlinkHref","stroke","strokeDashoffset","strokeWidth","d","mask","tickMilliseconds","Number","config","movingMilliseconds","pausedMilliseconds","MachineStore","action","bound","intervalId","nextTickTimestamp","nextMotorStateChangeTimestamp","runInAction","reset","clearInterval","this","shouldMoveIfNotPaused","Infinity","isMotorMoving","timestamp","Date","now","updateNextTickTimestamp","updateNextMotorStateChangeTimestamp","setInterval","handleTick","state","moveConveyor","newState","startInterval","observable","Off","context","createContext","MachineStoreProvider","Provider","Radio","value","store","useContext","Error","useMachineStore","machineState","useObserver","handleChange","useCallback","event","changeState","target","type","name","onChange","checked","Controls","On","Paused","BiscuitMachine","useState","useEffect","destroy","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configure","computedRequiresReaction","observableRequiresReaction","reactionRequiresObservable","enforceActions","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a0f9706f.chunk.js","sourcesContent":["enum MachineState {\n\tOn = 'on',\n\tPaused = 'paused',\n\tOff = 'off',\n}\n\nexport default MachineState\n","import React from 'react'\n\nimport './ConveyorBelt.scss'\n\nconst strokeDasharray = [160, 6]\nconst strokeDasharrayString = [160, 6].join()\nconst pathLength = (strokeDasharray[0] + strokeDasharray[1]) * 16\n\nexport default function ConveyorBelt() {\n\treturn (\n\t\t<svg\n\t\t\tclassName=\"conveyor-belt\"\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\txmlnsXlink=\"http://www.w3.org/1999/xlink\"\n\t\t\tviewBox=\"0 0 1307 422\"\n\t\t\tfill=\"none\"\n\t\t>\n\t\t\t<defs>\n\t\t\t\t<circle id=\"tail-pulley-path\" cx=\"1250\" cy=\"125\" r=\"39\" />\n\t\t\t\t<circle id=\"secondary-pulley-path\" cx=\"104.5\" cy=\"125.5\" r=\"84.5\" />\n\t\t\t\t<circle id=\"primary-pulley-path\" cx=\"292\" cy=\"341\" r=\"35\" />\n\t\t\t\t<mask\n\t\t\t\t\tid=\"tail-pulley-mask\"\n\t\t\t\t\twidth=\"78\"\n\t\t\t\t\theight=\"78\"\n\t\t\t\t\tx=\"0\"\n\t\t\t\t\ty=\"0\"\n\t\t\t\t\tfill=\"#fff\"\n\t\t\t\t\tmaskContentUnits=\"userSpaceOnUse\"\n\t\t\t\t\tmaskUnits=\"objectBoundingBox\"\n\t\t\t\t>\n\t\t\t\t\t<use xlinkHref=\"#tail-pulley-path\" />\n\t\t\t\t</mask>\n\t\t\t\t<mask\n\t\t\t\t\tid=\"secondary-pulley-mask\"\n\t\t\t\t\twidth=\"169\"\n\t\t\t\t\theight=\"169\"\n\t\t\t\t\tx=\"0\"\n\t\t\t\t\ty=\"0\"\n\t\t\t\t\tfill=\"#fff\"\n\t\t\t\t\tmaskContentUnits=\"userSpaceOnUse\"\n\t\t\t\t\tmaskUnits=\"objectBoundingBox\"\n\t\t\t\t>\n\t\t\t\t\t<use xlinkHref=\"#secondary-pulley-path\" />\n\t\t\t\t</mask>\n\t\t\t\t<mask\n\t\t\t\t\tid=\"primary-pulley-mask\"\n\t\t\t\t\twidth=\"70\"\n\t\t\t\t\theight=\"70\"\n\t\t\t\t\tx=\"0\"\n\t\t\t\t\ty=\"0\"\n\t\t\t\t\tfill=\"#fff\"\n\t\t\t\t\tmaskContentUnits=\"userSpaceOnUse\"\n\t\t\t\t\tmaskUnits=\"objectBoundingBox\"\n\t\t\t\t>\n\t\t\t\t\t<use xlinkHref=\"#primary-pulley-path\" />\n\t\t\t\t</mask>\n\t\t\t</defs>\n\t\t\t<path\n\t\t\t\tclassName=\"conveyor-belt-path\"\n\t\t\t\tstroke=\"#000\"\n\t\t\t\tstrokeDasharray={strokeDasharrayString}\n\t\t\t\tpathLength={pathLength}\n\t\t\t\tstrokeDashoffset=\"-2\"\n\t\t\t\tstrokeWidth=\"4\"\n\t\t\t\td=\"M91 72h1161c29.271 0 53 23.729 53 53s-23.729 53-53 53H91c-29.271 0-53-23.729-53-53s23.729-53 53-53z\"\n\t\t\t/>\n\t\t\t<use\n\t\t\t\tclassName=\"tail-pulley\"\n\t\t\t\tfill=\"#D8D8D8\"\n\t\t\t\tstroke=\"#979797\"\n\t\t\t\tstrokeDasharray=\"26,9\"\n\t\t\t\tstrokeWidth=\"14\"\n\t\t\t\tmask=\"url(#tail-pulley-mask)\"\n\t\t\t\txlinkHref=\"#tail-pulley-path\"\n\t\t\t/>\n\t\t\t<use\n\t\t\t\tclassName=\"secondary-pulley\"\n\t\t\t\tfill=\"#D8D8D8\"\n\t\t\t\tstroke=\"#979797\"\n\t\t\t\tstrokeDasharray=\"100,6\"\n\t\t\t\tstrokeWidth=\"26\"\n\t\t\t\tmask=\"url(#secondary-pulley-mask)\"\n\t\t\t\txlinkHref=\"#secondary-pulley-path\"\n\t\t\t/>\n\t\t\t<g className=\"motor\" fill=\"#48AEDF\" stroke=\"#335475\">\n\t\t\t\t<circle cx=\"292\" cy=\"341\" r=\"77.5\" strokeWidth=\"6\" />\n\t\t\t\t<use\n\t\t\t\t\tclassName=\"primary-pulley\"\n\t\t\t\t\tstrokeDasharray=\"70,3\"\n\t\t\t\t\tstrokeWidth=\"12\"\n\t\t\t\t\tmask=\"url(#primary-pulley-mask)\"\n\t\t\t\t\txlinkHref=\"#primary-pulley-path\"\n\t\t\t\t/>\n\t\t\t</g>\n\t\t\t<path\n\t\t\t\tclassName=\"vee-belt\"\n\t\t\t\tstroke=\"#000\"\n\t\t\t\tstrokeDasharray=\"137,4\"\n\t\t\t\tstrokeWidth=\"10\"\n\t\t\t\td=\"M322.185 367.717s0 0 0 0c-14.003 16.036-38.181 18.123-54.724 4.723L47.195 194.028C12.442 165.878 4.33 116.14 28.337 78.407c5.613-8.822 11.763-16.02 18.448-21.591 0 0 0 0 0 0 37.917-31.6 94.272-26.48 125.873 11.438a89.372 89.372 0 017.84 11.004l145.805 241.346c9.019 14.929 7.354 33.975-4.118 47.113 0 0 0 0 0 0z\"\n\t\t\t/>\n\t\t</svg>\n\t)\n}\n","import { action, observable, runInAction } from 'mobx'\nimport { createContext, useContext } from 'react'\n\nimport MachineState from './MachineState'\n\nimport config from './config.module.scss'\n\nconst tickMilliseconds = Number(config.tickMilliseconds)\nconst movingMilliseconds = Number(config.movingMilliseconds)\nconst pausedMilliseconds = Number(config.pausedMilliseconds)\n\nexport default class MachineStore {\n\t@observable state: MachineState = MachineState.Off\n\n\t// #region Properties with initial value set from reset method\n\t@observable private shouldMoveIfNotPaused!: boolean // Pulse state\n\tprivate intervalId!: ReturnType<typeof setTimeout> | 0\n\tprivate nextTickTimestamp!: number\n\tprivate nextMotorStateChangeTimestamp!: number\n\n\t@observable isMotorMoving!: boolean\n\t// #endregion\n\n\tconstructor() {\n\t\trunInAction(() => {\n\t\t\tthis.reset()\n\t\t})\n\t}\n\n\tprivate reset() {\n\t\tclearInterval(this.intervalId as Parameters<typeof clearInterval>[0])\n\t\tthis.shouldMoveIfNotPaused = false\n\t\tthis.intervalId = 0\n\t\tthis.nextTickTimestamp = Infinity\n\t\tthis.nextMotorStateChangeTimestamp = Infinity\n\t\tthis.isMotorMoving = false\n\t}\n\n\tprivate startInterval() {\n\t\tif (this.intervalId) return\n\n\t\trunInAction(() => {\n\t\t\tconst timestamp = Date.now()\n\t\t\tthis.updateNextTickTimestamp(timestamp)\n\t\t\tthis.updateNextMotorStateChangeTimestamp(timestamp)\n\t\t})\n\n\t\tthis.intervalId = setInterval(this.handleTick, tickMilliseconds)\n\t}\n\n\t@action.bound private handleTick() {\n\t\tconst timestamp = Date.now()\n\t\twhile (this.nextTickTimestamp <= timestamp) {\n\t\t\tif (!this.shouldMoveIfNotPaused && this.state === 'off') {\n\t\t\t\tthis.reset()\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tif (this.nextMotorStateChangeTimestamp <= this.nextTickTimestamp) {\n\t\t\t\tthis.shouldMoveIfNotPaused = !this.shouldMoveIfNotPaused\n\n\t\t\t\tif (this.shouldMoveIfNotPaused) {\n\t\t\t\t\tthis.moveConveyor()\n\t\t\t\t} else {\n\t\t\t\t\tthis.isMotorMoving = false\n\t\t\t\t}\n\n\t\t\t\tthis.updateNextMotorStateChangeTimestamp(this.nextMotorStateChangeTimestamp)\n\t\t\t}\n\n\t\t\tthis.updateNextTickTimestamp(this.nextTickTimestamp)\n\t\t}\n\t}\n\n\tprivate updateNextMotorStateChangeTimestamp(timestamp: number) {\n\t\tthis.nextMotorStateChangeTimestamp =\n\t\t\ttimestamp + (this.shouldMoveIfNotPaused ? movingMilliseconds : pausedMilliseconds)\n\t}\n\n\tprivate updateNextTickTimestamp(timestamp: number) {\n\t\tthis.nextTickTimestamp = timestamp + tickMilliseconds\n\t}\n\n\tprivate moveConveyor() {\n\t\tif (this.state === 'paused') return\n\n\t\tthis.isMotorMoving = true\n\t}\n\n\t@action changeState(newState: MachineState) {\n\t\tthis.state = newState\n\t\tthis.startInterval()\n\t}\n\n\tdestroy() {\n\t\tclearInterval(this.intervalId as Parameters<typeof clearInterval>[0])\n\t}\n}\n\nconst context = createContext<MachineStore | null>(null)\n\nexport function useMachineStore() {\n\tconst store = useContext(context)\n\tif (!store) throw new Error('Machine store not provided')\n\treturn store\n}\n\nexport const MachineStoreProvider = context.Provider\n","import { useObserver } from 'mobx-react-lite'\nimport React, { useCallback } from 'react'\n\nimport MachineState from '../MachineState'\nimport { useMachineStore } from '../MachineStore'\n\nimport './Controls.scss'\n\nfunction Radio({ value }: { value: MachineState }) {\n\tconst store = useMachineStore()\n\tconst machineState = useObserver(() => store.state)\n\tconst handleChange = useCallback(\n\t\t(event: React.ChangeEvent<HTMLInputElement>) => store.changeState(event.target.value as MachineState),\n\t\t[store],\n\t)\n\n\treturn (\n\t\t<input\n\t\t\ttype=\"radio\"\n\t\t\tname=\"machine-state\"\n\t\t\tvalue={value}\n\t\t\tonChange={handleChange}\n\t\t\tchecked={machineState === value}\n\t\t/>\n\t)\n}\n\nexport default function Controls() {\n\treturn (\n\t\t<ul className=\"controls\">\n\t\t\t<li>\n\t\t\t\t<label>\n\t\t\t\t\t<Radio value={MachineState.On} /> On\n\t\t\t\t</label>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<label>\n\t\t\t\t\t<Radio value={MachineState.Paused} /> Paused\n\t\t\t\t</label>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<label>\n\t\t\t\t\t<Radio value={MachineState.Off} /> Off\n\t\t\t\t</label>\n\t\t\t</li>\n\t\t</ul>\n\t)\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React, { useEffect, useState } from 'react'\n\nimport ConveyorBelt from './ConeyorBelt'\nimport Controls from './Controls'\nimport MachineStore, { MachineStoreProvider } from './MachineStore'\n\nimport './BiscuitMachine.scss'\n\nexport default function BiscuitMachine() {\n\tconst [store] = useState(() => new MachineStore())\n\n\tuseEffect(() => {\n\t\treturn () => store.destroy()\n\t}, [store])\n\n\tconst isMotorMoving = useObserver(() => store.isMotorMoving)\n\n\treturn (\n\t\t<MachineStoreProvider value={store}>\n\t\t\t<div className={isMotorMoving ? 'biscuit-machine motor-on' : 'biscuit-machine'}>\n\t\t\t\t<ConveyorBelt />\n\t\t\t\t<Controls />\n\t\t\t</div>\n\t\t</MachineStoreProvider>\n\t)\n}\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry)\n\t\t\tgetFID(onPerfEntry)\n\t\t\tgetFCP(onPerfEntry)\n\t\t\tgetLCP(onPerfEntry)\n\t\t\tgetTTFB(onPerfEntry)\n\t\t})\n\t}\n}\n\nexport default reportWebVitals\n","import { configure } from 'mobx'\n\nconfigure({\n\tcomputedRequiresReaction: true,\n\tobservableRequiresReaction: true,\n\treactionRequiresObservable: true,\n\tenforceActions: 'always',\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport BiscuitMachine from './BiscuitMachine'\n\nimport reportWebVitals from './reportWebVitals'\n\nimport './mobxConfiguration'\n\nimport './index.scss'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<BiscuitMachine />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tickMilliseconds\":\"100\",\"movingMilliseconds\":\"2000\",\"pausedMilliseconds\":\"2000\"};"],"sourceRoot":""}